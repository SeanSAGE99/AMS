{
  "custom": {
    "Label": "General Floor",
    "auto": false,
    "current": null,
    "lightCircuitName": "Light Circuit 2",
    "lightStatus": true,
    "manual": false,
    "mode": "Off mode",
    "modeAvailable": false,
    "offCommandExist": false,
    "onCommandExist": false
  },
  "params": {
    "circuitNumber": 2,
    "commmandEnable": true,
    "tagParentPath": "[default]International/Precinct/P6 Car Park/Level 8/P6_DBX08-N/Lights",
    "tagQuality": "Bad_Disabled"
  },
  "propConfig": {
    "custom.Label": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "expression",
          "tagPath": "{view.params.tagParentPath}+ \u0027/Light Circuit \u0027+{view.params.circuitNumber}+\u0027/Parameters.Description\u0027"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.auto": {
      "binding": {
        "config": {
          "expression": "if(isavailable (tag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Status/Auto\u0027)),\r\ntag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Status/Auto\u0027),\r\nfalse )"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.current": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "lightCircuitName": "{view.custom.lightCircuitName}",
            "tagParentPath": "{view.params.tagParentPath}"
          },
          "tagPath": "{tagParentPath}/{lightCircuitName}/Status/Current"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.lightCircuitName": {
      "binding": {
        "config": {
          "expression": "\"Light Circuit \"+{view.params.circuitNumber}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.lightStatus": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "lightCircuitName": "{view.custom.lightCircuitName}",
            "tagParentPath": "{view.params.tagParentPath}"
          },
          "tagPath": "{tagParentPath}/{lightCircuitName}/Status/On"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.manual": {
      "binding": {
        "config": {
          "expression": "if(isavailable (tag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Status/Manual\u0027)),\r\ntag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Status/Manual\u0027),\r\nfalse )"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.mode": {
      "binding": {
        "config": {
          "expression": "case(binEnc({view.custom.auto},{view.custom.manual}),\r\n0,\"Off mode\",\r\n1,\"Auto mode\",\r\n2,\"Manual mode\",\r\n3,\"bad state\",\r\n\"bad state\"\r\n)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.modeAvailable": {
      "binding": {
        "config": {
          "expression": "if(isavailable (tag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Status/Manual\u0027)),\r\ntrue,\r\nfalse )"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.offCommandExist": {
      "binding": {
        "config": {
          "expression": "isavailable (tag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Control/Off Command\u0027))"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.onCommandExist": {
      "binding": {
        "config": {
          "expression": "isavailable (tag({view.params.tagParentPath}+\u0027/\u0027+{view.custom.lightCircuitName}+\u0027/Control/On Command\u0027))"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "params.circuitNumber": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.commmandEnable": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagParentPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagQuality": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "expression",
          "tagPath": "{view.params.tagParentPath}+ \u0027/Light Circuit \u0027+{view.params.circuitNumber}+\u0027/Status/Auto.Quality\u0027"
        },
        "type": "tag"
      },
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 40,
      "width": 362
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Heading"
        },
        "position": {
          "basis": "113px",
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.custom.Label"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Tag/Label",
            "overflow": "hidden",
            "textAlign": "left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "grow": 1
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Single Tag"
        },
        "position": {
          "basis": "75px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.buttonText": {
            "binding": {
              "config": {
                "expression": "if({view.custom.lightStatus},\"Off\",\"On\")"
              },
              "type": "expr"
            }
          },
          "props.params.tagName": {
            "binding": {
              "config": {
                "expression": "if({view.custom.lightStatus},\"Off Command\",\"On Command\")"
              },
              "type": "expr"
            }
          },
          "props.params.tagParentPath": {
            "binding": {
              "config": {
                "expression": "{view.params.tagParentPath} + \u0027/\u0027 + {view.custom.lightCircuitName} + \u0027/Control\u0027"
              },
              "type": "expr"
            }
          },
          "props.params.writeEnable": {
            "binding": {
              "config": {
                "expression": "{view.params.commmandEnable}\u0026\u0026(if({view.custom.lightStatus},{view.custom.offCommandExist},{view.custom.onCommandExist}))\r\n//the first part checks if \"Light Circuits Commands Enabled\" tag exist in the DB:, second part checks on and off commands to be enabled for individual light circuit"
              },
              "type": "expr"
            }
          },
          "props.style.opacity": {
            "binding": {
              "config": {
                "expression": "// check if \"Light Circuits Commands Enabled\" tag exist:\r\n if(isavailable(tag({view.params.tagParentPath}+\u0027/Light Circuits Commands Enabled\u0027)),\r\n //then check if it is not the \"Night Mode\" circuit, that is 999\r\n if({view.params.circuitNumber}!\u003d999 ,if(tag({view.params.tagParentPath}+\u0027/Light Circuits Commands Enabled\u0027),1 , 0.2),1),\r\n 1 )"
              },
              "enabled": false,
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "writeValue": true
          },
          "path": "Shared/Templates/Display/Alexandrina/Control/Buttons/Single Tag with Enable",
          "style": {
            "marginLeft": "10px",
            "marginRight": "0px",
            "opacity": 1,
            "overflow": "hidden"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "FlexContainer_0"
        },
        "position": {
          "grow": 1
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Icon"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "props.path": {
            "binding": {
              "config": {
                "expression": "if ({view.custom.modeAvailable},\r\n{view.custom.mode},\r\n\"manual does not exist\")"
              },
              "transforms": [
                {
                  "fallback": "material/error_outline",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "Manual mode",
                      "output": "material/pan_tool"
                    },
                    {
                      "input": "Auto mode",
                      "output": "material/autorenew"
                    },
                    {
                      "input": "Off mode",
                      "output": "material/not_interested"
                    },
                    {
                      "input": "manual does not exist",
                      "output": ""
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "margin": 5
          }
        },
        "type": "ia.display.icon"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "justify": "center",
      "style": {
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}