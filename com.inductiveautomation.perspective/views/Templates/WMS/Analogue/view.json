{
  "custom": {
    "deviceDescription": "Discharge",
    "deviceTagPath": "Water Monitoring System/International/North West Pump Station/Discharge Pressure",
    "sitePath": "Water Monitoring System/International/North West Pump Station",
    "tags": [
      {
        "tagName": "High Pressure Alarm",
        "tagParentPath": "[default]Water Monitoring System/International/North West Pump Station/Discharge Pressure/Alarms"
      },
      {
        "tagName": "Low Pressure Alarm",
        "tagParentPath": "[default]Water Monitoring System/International/North West Pump Station/Discharge Pressure/Alarms"
      },
      {
        "tagName": "Pressure",
        "tagParentPath": "[default]Water Monitoring System/International/North West Pump Station/Discharge Pressure/Status"
      }
    ]
  },
  "params": {
    "AnalogueName": "Pressure",
    "deviceName": "Discharge Pressure",
    "deviceParentPath": "Water Monitoring System/International/North West Pump Station",
    "popupWindow": "Popups/WMS/ppuAnalogue"
  },
  "propConfig": {
    "custom.deviceDescription": {
      "binding": {
        "config": {
          "expression": "tag({view.custom.deviceTagPath}+\u0027/Parameters.Description\u0027)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.deviceTagPath": {
      "binding": {
        "config": {
          "expression": "{view.params.deviceParentPath} + \u0027/\u0027 +\r\n{view.params.deviceName}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.sitePath": {
      "binding": {
        "config": {
          "path": "view.params.deviceParentPath"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.tags": {
      "binding": {
        "config": {
          "expression": "now()"
        },
        "transforms": [
          {
            "code": "    tags \u003d []\n    res \u003d system.tag.browse(self.custom.deviceTagPath, {\"recursive\": True})    \n    \n    for tag in res:\n        if not tag.get(\u0027hasChildren\u0027) and tag[\u0027valueSource\u0027] !\u003d \u0027expr\u0027:\n            # Get the full path of the tag\n            tagPath \u003d str(tag[\u0027fullPath\u0027])\n            # Extract tag name and parent path\n            last_slash_index \u003d tagPath.rfind(\u0027/\u0027)  # find the last occurrence of \u0027/\u0027\n            tagName \u003d tagPath[last_slash_index + 1:]  # tag name is the substring after the last \u0027/\u0027\n            tagParentPath \u003d tagPath[:last_slash_index]  # tag parent path is the substring before the last \u0027/\u0027\n            # Check if the tag is enabled\n            enabledPath \u003d \"{}.Enabled\".format(tagPath)\n            enabledTag \u003d system.tag.read(enabledPath)\n            if enabledTag.value:\n        \t    tags.append({\u0027tagName\u0027: tagName, \u0027tagParentPath\u0027: tagParentPath})\n    \n    return tags",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.AnalogueName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.deviceName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.deviceParentPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.popupWindow": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 70,
      "width": 417
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\twidth \u003d self.page.props.dimensions.viewport.width\n\tprint(width)\n\tif width \u003e 1260:\n\t\tsystem.perspective.openPopup(self.view.custom.deviceTagPath, self.view.params.popupWindow, {\u0027deviceParentPath\u0027 : self.view.params.deviceParentPath, \u0027deviceName\u0027 : self.view.params.deviceName, \u0027AnalogueName\u0027 : self.view.params.AnalogueName}, showCloseIcon \u003d False, draggable \u003d True)\n\telif width \u003c\u003d 1260:\n\t    system.perspective.openPopup(self.view.custom.deviceTagPath, self.view.params.popupWindow, {\u0027deviceParentPath\u0027 : self.view.params.deviceParentPath, \u0027deviceName\u0027 : self.view.params.deviceName, \u0027AnalogueName\u0027 : self.view.params.AnalogueName}, showCloseIcon \u003d False, draggable \u003d False)"
              },
              "scope": "G",
              "type": "script"
            },
            "onContextMenu": {
              "config": {
                "draggable": true,
                "id": "TytcJZf5",
                "modal": false,
                "overlayDismiss": false,
                "resizable": true,
                "showCloseIcon": true,
                "type": "open",
                "viewParams": {
                  "tags": "{view.custom.tags}"
                },
                "viewPath": "Shared/Popups/ppu_MultipleTagInfo",
                "viewportBound": false
              },
              "scope": "C",
              "type": "popup"
            }
          }
        },
        "meta": {
          "name": "Analogue Value w Label"
        },
        "position": {
          "height": 0.5571,
          "width": 1
        },
        "propConfig": {
          "props.params.labelOverride": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "deviceTagPath": "{view.custom.deviceTagPath}"
                },
                "tagPath": "{deviceTagPath}/Parameters.DeviceName"
              },
              "type": "tag"
            }
          },
          "props.params.tagName": {
            "binding": {
              "config": {
                "path": "view.params.AnalogueName"
              },
              "type": "property"
            }
          },
          "props.params.tagParentPath": {
            "binding": {
              "config": {
                "path": "view.custom.deviceTagPath"
              },
              "transforms": [
                {
                  "expression": "{value} + \u0027/Status\u0027",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.style.classes": {
            "binding": {
              "config": {
                "expression": "if({view.params.popupWindow} \u003d \"\", \"\", \"HoverPointer\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "hideLabel": false,
            "showUnitsInValue": true,
            "tagQuality": "Good",
            "unitsWidth": "50%",
            "valueWidth": "100px"
          },
          "path": "Shared/Templates/Display/Flow Analogue Value w Label",
          "style": {
            "backgroundColor": "var(--neutral-50)",
            "borderBottomLeftRadius": 5,
            "borderBottomRightRadius": 5,
            "borderColor": "var(--neutral-50)",
            "borderStyle": "solid",
            "borderTopLeftRadius": 5,
            "borderTopRightRadius": 5,
            "borderWidth": 1,
            "overflow": "hidden"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Symbol"
            },
            "position": {
              "basis": "51px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "deviceTagPath": "{view.custom.deviceTagPath}"
                    },
                    "tagPath": "{deviceTagPath}/Alarm Summary/Priority Counts/Active"
                  },
                  "type": "tag"
                }
              },
              "props.params.alarmSummary.parentPath": {
                "binding": {
                  "config": {
                    "path": "view.custom.deviceTagPath"
                  },
                  "type": "property"
                }
              },
              "props.params.device.name": {
                "binding": {
                  "config": {
                    "path": "view.params.deviceName"
                  },
                  "type": "property"
                }
              },
              "props.params.device.parentPath": {
                "binding": {
                  "config": {
                    "path": "view.custom.sitePath"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "alarmSummary": {
                  "enabled": true
                },
                "device": {
                  "enabled": false
                }
              },
              "path": "Shared/Alarms/Symbol",
              "style": {
                "classes": "UI/Pages/Background"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "257px",
              "grow": 1
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.custom.deviceDescription"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "borderBottomLeftRadius": 5,
                "borderBottomRightRadius": 5,
                "borderColor": "var(--neutral-50)",
                "borderStyle": "solid",
                "borderTopLeftRadius": 5,
                "borderTopRightRadius": 5,
                "borderWidth": 1,
                "classes": "UI/Popups/Background"
              },
              "textStyle": {
                "fontSize": "clamp(4pt, calc(0.3*(1.0vmin + 1.0vmax)), 18pt)",
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "height": 0.4471,
          "width": 1,
          "y": 0.5529
        },
        "props": {
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "mode": "percent",
      "style": {
        "classes": "UI/Pages/Background"
      }
    },
    "type": "ia.container.coord"
  }
}