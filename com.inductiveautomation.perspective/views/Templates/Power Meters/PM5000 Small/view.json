{
  "custom": {
    "deviceDescription": "PM5350",
    "deviceTagPath": "High Voltage/International/Substation 12/MTR001",
    "sitePath": "High Voltage/International/Substation 12",
    "tags": [
      {
        "tagName": "Active Energy",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Active Power",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Active Power Demand",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Active Power Phase A",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Active Power Phase B",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Active Power Phase C",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Apparent Power",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Connected",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Current Phase A",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Current Phase B",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Current Phase C",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Frequency",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Hostname",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Line AB Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Line BC Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Line CA Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Phase A Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Phase B Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Phase C Voltage",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Power Factor Raw",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Reactive Power",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Status",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001"
      },
      {
        "tagName": "Off Peak Active Energy",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001/Tariffs"
      },
      {
        "tagName": "Peak Active Energy",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001/Tariffs"
      },
      {
        "tagName": "Shoulder Active Energy",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001/Tariffs"
      },
      {
        "tagName": "Start Tariff Active Energy",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001/Tariffs"
      },
      {
        "tagName": "Tariff Description",
        "tagParentPath": "[default]High Voltage/International/Substation 12/MTR001/Tariffs"
      }
    ]
  },
  "params": {
    "deviceName": "MTR001",
    "deviceParentPath": "High Voltage/International/Substation 12",
    "fontSize": ""
  },
  "propConfig": {
    "custom.deviceDescription": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "deviceTagPath": "{view.custom.deviceTagPath}"
          },
          "tagPath": "{deviceTagPath}/Parameters.Description"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.deviceTagPath": {
      "binding": {
        "config": {
          "expression": "{view.params.deviceParentPath} + \u0027/\u0027 +\r\n{view.params.deviceName}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.sitePath": {
      "binding": {
        "config": {
          "path": "view.params.deviceParentPath"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.tags": {
      "binding": {
        "config": {
          "expression": "now()"
        },
        "transforms": [
          {
            "code": "    tags \u003d []\n    res \u003d system.tag.browse(self.custom.deviceTagPath, {\"recursive\": True})    \n    \n    for tag in res:\n        if not tag.get(\u0027hasChildren\u0027) and tag[\u0027valueSource\u0027] !\u003d \u0027expr\u0027:\n            # Get the full path of the tag\n            tagPath \u003d str(tag[\u0027fullPath\u0027])\n            # Extract tag name and parent path\n            last_slash_index \u003d tagPath.rfind(\u0027/\u0027)  # find the last occurrence of \u0027/\u0027\n            tagName \u003d tagPath[last_slash_index + 1:]  # tag name is the substring after the last \u0027/\u0027\n            tagParentPath \u003d tagPath[:last_slash_index]  # tag parent path is the substring before the last \u0027/\u0027\n            # Check if the tag is enabled\n            enabledPath \u003d \"{}.Enabled\".format(tagPath)\n            enabledTag \u003d system.tag.read(enabledPath)\n            if enabledTag.value:\n        \t    tags.append({\u0027tagName\u0027: tagName, \u0027tagParentPath\u0027: tagParentPath})\n    \n    return tags",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.deviceName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.deviceParentPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.fontSize": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 35,
      "width": 100
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.custom.deviceDescription"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "UI/Text/Heading2",
                "fontWeight": "lighter"
              },
              "textStyle": {
                "fontSize": "clamp(1pt, calc(0.3*(1.0vmin + 1.0vmax)), 10pt)"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.params.deviceName"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "UI/Text/Heading2",
                "fontWeight": "bold"
              },
              "textStyle": {
                "fontSize": "clamp(4pt, calc(0.4*(1.0vmin + 1.0vmax)), 18pt)"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "FlexContainer_0"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "direction": "column",
          "style": {
            "margin": "2px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Symbol_Double"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.params.alarmSummary.parentPath": {
                "binding": {
                  "config": {
                    "path": "view.custom.deviceTagPath"
                  },
                  "type": "property"
                }
              },
              "props.params.device.name": {
                "binding": {
                  "config": {
                    "path": "view.params.deviceName"
                  },
                  "type": "property"
                }
              },
              "props.params.device.parentPath": {
                "binding": {
                  "config": {
                    "path": "view.custom.sitePath"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "alarmSummary": {
                  "enabled": true
                },
                "device": {
                  "enabled": false
                }
              },
              "path": "Shared/Alarms/Symbol"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer_1"
        },
        "position": {
          "basis": "20%",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "deviceTagPath": "{view.custom.deviceTagPath}"
                },
                "tagPath": "{deviceTagPath}/Alarm Summary/Active Unack"
              },
              "transforms": [
                {
                  "code": "\n\tif \tvalue \u003e 0:\n\t\tvalue \u003d 1\n\telse:\n\t\tvalue \u003d 0\n\t\t\n\treturn value\n",
                  "type": "script"
                }
              ],
              "type": "tag"
            }
          }
        },
        "props": {
          "style": {
            "margin": "2px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\twidth \u003d self.page.props.dimensions.viewport.width\n\tprint(width)\n\tif width \u003e 1260:\n\t\tsystem.perspective.openPopup(self.view.custom.deviceTagPath, \u0027Popups/Power Meters/PM5000\u0027, {\u0027deviceParentPath\u0027 : self.view.params.deviceParentPath, \u0027deviceName\u0027 : self.view.params.deviceName}, showCloseIcon \u003d False, draggable \u003d True)\n\telse:\n\t\tsystem.perspective.openPopup(self.view.custom.deviceTagPath, \u0027Popups/Power Meters/PM5000\u0027, {\u0027deviceParentPath\u0027 : self.view.params.deviceParentPath, \u0027deviceName\u0027 : self.view.params.deviceName}, showCloseIcon \u003d False, draggable \u003d False)\t\n\t\t"
          },
          "scope": "G",
          "type": "script"
        },
        "onContextMenu": {
          "config": {
            "draggable": true,
            "id": "sAhJPbul",
            "modal": false,
            "overlayDismiss": false,
            "resizable": true,
            "showCloseIcon": true,
            "type": "open",
            "viewParams": {
              "tags": "{view.custom.tags}"
            },
            "viewPath": "Shared/Popups/ppu_MultipleTagInfo",
            "viewportBound": false
          },
          "scope": "C",
          "type": "popup"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "classes": "AMS/Button/Button-normal",
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}