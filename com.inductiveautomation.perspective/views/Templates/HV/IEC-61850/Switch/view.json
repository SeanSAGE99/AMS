{
  "custom": {
    "ActiveAck": false,
    "ActiveUnack": false,
    "AlarmCount": 0,
    "Closed": false,
    "DeviceTagPath": "High Voltage/International/Link Road Substation/IED01B",
    "Open": true,
    "tags": [
      {
        "tagName": "GOOSE Fault",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "Protection LAN A Fail Alarm",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "Relay Not Healthy Alarm",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "Relay Offline",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "Time Sync Fail Alarm",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "VT Fuse Unhealthy",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Alarms"
      },
      {
        "tagName": "Connected",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "Hostname",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "Line AB Voltage",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "Line BC Voltage",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "Line CA Voltage",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "Status",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B"
      },
      {
        "tagName": "ES Closed",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "ES Open",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "Test Mode",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "VT Truck in Service - Position",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "VT Truck in Test - Position",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "VT Truck OK",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Status Folder"
      },
      {
        "tagName": "Arc Flash Trip",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Trip"
      },
      {
        "tagName": "MCB Trip",
        "tagParentPath": "[default]High Voltage/International/Link Road Substation/IED01B/Trip"
      }
    ]
  },
  "params": {
    "DeviceName": "IED01B",
    "DeviceParentPath": "High Voltage/International/Link Road Substation",
    "fontSize": "clamp(4pt, calc(0.5*(1.0vmin + 1.0vmax)), 18pt)"
  },
  "propConfig": {
    "custom.ActiveAck": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.DeviceTagPath}"
          },
          "tagPath": "{1}/Alarm Summary/Active Ack"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.ActiveUnack": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.DeviceTagPath}"
          },
          "tagPath": "{1}/Alarm Summary/Active Unack"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.AlarmCount": {
      "binding": {
        "config": {
          "expression": "{view.custom.ActiveAck}+{view.custom.ActiveUnack}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.Closed": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.DeviceTagPath}"
          },
          "tagPath": "{1}/Status Folder/ES Closed"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.DeviceTagPath": {
      "binding": {
        "config": {
          "expression": "{view.params.DeviceParentPath}+\u0027/\u0027+{view.params.DeviceName}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.Open": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.DeviceTagPath}"
          },
          "tagPath": "{1}/Status Folder/ES Open"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.tags": {
      "binding": {
        "config": {
          "expression": "now()"
        },
        "transforms": [
          {
            "code": "    tags \u003d []\n    res \u003d system.tag.browse(self.custom.DeviceTagPath, {\"recursive\": True})    \n    \n    for tag in res:\n        if not tag.get(\u0027hasChildren\u0027) and tag[\u0027valueSource\u0027] !\u003d \u0027expr\u0027:\n            # Get the full path of the tag\n            tagPath \u003d str(tag[\u0027fullPath\u0027])\n            # Extract tag name and parent path\n            last_slash_index \u003d tagPath.rfind(\u0027/\u0027)  # find the last occurrence of \u0027/\u0027\n            tagName \u003d tagPath[last_slash_index + 1:]  # tag name is the substring after the last \u0027/\u0027\n            tagParentPath \u003d tagPath[:last_slash_index]  # tag parent path is the substring before the last \u0027/\u0027\n            # Check if the tag is enabled\n            enabledPath \u003d \"{}.Enabled\".format(tagPath)\n            enabledTag \u003d system.tag.read(enabledPath)\n            if enabledTag.value:\n        \t    tags.append({\u0027tagName\u0027: tagName, \u0027tagParentPath\u0027: tagParentPath})\n    \n    return tags",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.DeviceName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.DeviceParentPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.fontSize": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 118,
      "width": 89
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "height": 0.2712,
          "width": 0.573,
          "x": 0.5167,
          "y": 0.0592
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.DeviceName"
              },
              "transforms": [
                {
                  "expression": "\"CB\" + replace(substring({value}, 3),\"0\",\"\")",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.textStyle.fontSize": {
            "binding": {
              "config": {
                "path": "view.params.fontSize"
              },
              "type": "property"
            }
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "height": 0.2712,
          "width": 0.4944,
          "x": 0.5278,
          "y": 0.2797
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "1": "{view.custom.DeviceTagPath}"
                },
                "tagPath": "{1}/Parameters.CircuitNumber"
              },
              "type": "tag"
            }
          },
          "props.textStyle.fontSize": {
            "binding": {
              "config": {
                "path": "view.params.fontSize"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "fontStyle": "italic"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onContextMenu": {
              "config": {
                "draggable": true,
                "id": "eH_x-p76",
                "modal": false,
                "overlayDismiss": false,
                "resizable": true,
                "showCloseIcon": true,
                "type": "open",
                "viewParams": {
                  "tags": "{view.custom.tags}"
                },
                "viewPath": "Shared/Popups/ppu_MultipleTagInfo",
                "viewportBound": false
              },
              "scope": "C",
              "type": "popup"
            }
          }
        },
        "meta": {
          "name": "SW"
        },
        "position": {
          "height": 0.6356,
          "width": 0.2135,
          "x": 0.146,
          "y": -0.0847
        },
        "propConfig": {
          "props.elements[0].elements[0].elements[0].stroke.paint": {
            "binding": {
              "config": {
                "expression": "if({view.custom.AlarmCount} !\u003d 0, 0, 1)"
              },
              "transforms": [
                {
                  "fallback": "var(--warningSecondary)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "var(--success)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[0].elements[1].stroke.paint": {
            "binding": {
              "config": {
                "expression": "if({view.custom.AlarmCount} !\u003d 0, 0, 1)"
              },
              "transforms": [
                {
                  "fallback": "var(--warningSecondary)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "var(--success)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[0].type": {
            "binding": {
              "config": {
                "expression": "if(({view.custom.Open} \u003d 0 \u0026\u0026 {view.custom.Closed} \u003d 1) , 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "path",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "group"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[1].elements[0].stroke.paint": {
            "binding": {
              "config": {
                "expression": "if({view.custom.AlarmCount} \u003d 0, 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "var(--warningSecondary)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "var(--qual-4)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[1].type": {
            "binding": {
              "config": {
                "expression": "if({view.custom.Open} \u003d 1 \u0026\u0026 {view.custom.Closed} \u003d 0 , 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "path",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "group"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[2].elements[0].stroke.paint": {
            "binding": {
              "config": {
                "expression": "if({view.custom.AlarmCount} \u003d 0 , 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "var(--warningSecondary)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "var(--callToAction--disabled)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[2].type": {
            "binding": {
              "config": {
                "expression": "if({view.custom.Open} \u003d 0 \u0026\u0026 {view.custom.Closed} \u003d 0 , 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "path",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "group"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.elements[0].elements[3].type": {
            "binding": {
              "config": {
                "expression": "if({view.custom.Open} \u003d 1 \u0026\u0026 {view.custom.Closed} \u003d 1 , 1, 0)"
              },
              "transforms": [
                {
                  "fallback": "path",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 1,
                      "output": "group"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.style.marginLeft": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "1": "{view.custom.DeviceTagPath}"
                },
                "tagPath": "{1}/Status Folder/VT Truck in Test - Position"
              },
              "type": "tag"
            }
          }
        },
        "props": {
          "elements": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "d": "m 6.6990531,22.364074 -0.00376,-6.260393",
                      "fill": {
                        "paint": "none",
                        "rule": "evenodd"
                      },
                      "name": "path14756",
                      "stroke": {
                        "linecap": "round",
                        "width": "0.545231px"
                      },
                      "style": {},
                      "type": "path"
                    },
                    {
                      "d": "M 6.6953345,15.970567 2.6459996,6.9975501",
                      "fill": {
                        "paint": "none",
                        "rule": "evenodd"
                      },
                      "name": "path14758",
                      "stroke": {
                        "linecap": "round",
                        "width": "0.546586px"
                      },
                      "style": {},
                      "type": "path"
                    }
                  ],
                  "name": "g30707",
                  "transform": "translate(-0.18033219,-0.64404353)"
                },
                {
                  "elements": [
                    {
                      "d": "M 6.6990395,22.364061 6.6974667,7.2394847",
                      "fill": {
                        "paint": "none",
                        "rule": "evenodd"
                      },
                      "name": "path14756-3",
                      "stroke": {
                        "linecap": "round",
                        "opacity": "1",
                        "width": "0.547432px"
                      },
                      "style": {},
                      "type": "path"
                    }
                  ],
                  "name": "g30701",
                  "transform": "translate(-0.180332,-0.6440435)"
                },
                {
                  "elements": [
                    {
                      "d": "M -4.4182125,19.452428 -4.4197853,4.3278518",
                      "fill": {
                        "opacity": "1",
                        "paint": "none",
                        "rule": "evenodd"
                      },
                      "name": "path14756-3-4",
                      "stroke": {
                        "linecap": "round",
                        "opacity": "1",
                        "width": "0.547432px"
                      },
                      "style": {},
                      "type": "path"
                    }
                  ],
                  "name": "g30696",
                  "transform": "translate(10.93692,2.2675894)"
                },
                {
                  "elements": [
                    {
                      "d": "M -4.4182125,19.452428 -4.4197853,4.3278518",
                      "fill": {
                        "opacity": "1",
                        "paint": "none",
                        "rule": "evenodd"
                      },
                      "name": "path14756-3-4",
                      "stroke": {
                        "linecap": "round",
                        "opacity": "1",
                        "paint": "var(--warningSecondary)",
                        "width": "0.547432px"
                      },
                      "style": {},
                      "type": "path"
                    }
                  ],
                  "name": "g30696",
                  "transform": "translate(10.93692,2.2675894)"
                }
              ],
              "name": "g30722",
              "transform": "matrix(1.5212484,0,0,1.8467105,-3.1848551,-9.4026418)",
              "type": "group"
            }
          ],
          "viewBox": "0 0 9.260125 31.750588"
        },
        "type": "ia.shapes.svg"
      },
      {
        "meta": {
          "name": "SW Earth"
        },
        "position": {
          "height": 0.5508,
          "width": 0.3034,
          "x": 0.3085,
          "y": 0.4534
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "1": "{view.custom.DeviceTagPath}"
                },
                "tagPath": "{1}/Status Folder/ES Closed"
              },
              "type": "tag"
            }
          }
        },
        "props": {
          "elements": [
            {
              "elements": [
                {
                  "d": "m12.315 8.3564-9.9588 0.0051",
                  "name": "path11",
                  "type": "path"
                },
                {
                  "d": "m9.9585 10.765-5.0774 0.0098",
                  "name": "path13",
                  "type": "path"
                },
                {
                  "d": "m8.565 13.173-2.2964 0.02092",
                  "name": "path15",
                  "type": "path"
                },
                {
                  "d": "m7.4254 7.8751-0.0029-15.034",
                  "name": "path17",
                  "type": "path"
                },
                {
                  "d": "m7.4225-7.1593-7.0987-12.066",
                  "name": "path19",
                  "type": "path"
                }
              ],
              "fill": {
                "paint": "none",
                "rule": "evenodd"
              },
              "name": "g21",
              "stroke": {
                "linecap": "round",
                "paint": "#008000"
              },
              "transform": "matrix(.8273 0 0 .6548 -.011416 12.75)",
              "type": "group"
            }
          ],
          "viewBox": "0 0 10.583 22.49"
        },
        "type": "ia.shapes.svg"
      },
      {
        "meta": {
          "name": "Symbol"
        },
        "position": {
          "height": 0.1864,
          "width": 0.2472,
          "x": 0.3318,
          "y": 0.1784
        },
        "propConfig": {
          "props.params.alarmSummary.parentPath": {
            "binding": {
              "config": {
                "path": "view.custom.DeviceTagPath"
              },
              "type": "property"
            }
          },
          "props.params.device.name": {
            "binding": {
              "config": {
                "path": "view.params.DeviceName"
              },
              "type": "property"
            }
          },
          "props.params.device.parentPath": {
            "binding": {
              "config": {
                "path": "view.params.DeviceParentPath"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "alarmSummary": {
              "enabled": true
            },
            "device": {
              "enabled": true
            }
          },
          "path": "Shared/Alarms/Symbol"
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "mode": "percent",
      "style": {
        "overflow": "hidden"
      }
    },
    "type": "ia.container.coord"
  }
}